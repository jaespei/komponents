type: deployment
name: pattern-load-balancer
entrypoints:
  in:
    protocol: tcp:30000
    mapping: in
model:
  type: composite
  imports:
    Service:
      name: Service
      type: basic
      cardinality: "[3:3]"
      runtime: docker
      source: node?cmd=echo "$$APP" > main.js; node main
      variables:
        APP: |
          const os = require('os');
          require('http').createServer((req, res) => {
            res.end(`
            <!doctype html>
            <html>
              <head>
                <title>Load Balancer pattern</title>
              </head>
              <body><h1>Instance $${ os.hostname() }: Hello world!!</h1></body>
            </html>
            `);
          }).listen(80);
      endpoints:
        in:
          type: in
          protocol: tcp:80
  subcomponents:
    svc: Service
  connectors:
    lb: 
      type: LoadBalancer
      outputs:
        - svc.in
  endpoints:
    in:
      type: in
      protocol: tcp:80
      mapping: lb